Data dan Analisis hasil percobaan Pertanyaan 

1. Jalankan code program diatas dan benahi jika menemukan kesalahan! 
	Jawab:
	Tidak ada
	

2. Bagaimana cara konstruktor pada subclass memanggil konstruktor di superclass nya? Apakah hal itu perlu dilakukan? Sertakan alasan anda ! 
Jawaban:
Konstruktor pada subclass dapat memanggil konstruktor dari superclass menggunakan perintah "super" dan diikuti dengan atribut-atribut yang dimiliki superclass. Hal ini tentunya diperlukan karena dalam konsep inheritance, subclass mewarisi semua atribut dari superclass dan mungkin memiliki atribut tambahan sendiri. Sebagai contoh, kita bisa menuliskan kode seperti "super(name, salary, year, month, day);" untuk memanggil konstruktor superclass dengan memberikan nilai atribut yang relevan.

3. Tambahkan constructor pada class Employee dengan parameter String name! amati perubahan apa yang terjadi, jelaskan jawaban anda! 

Jawaban:
Tidak ada perubahan yang terjadi, karena yang terjadi ketika menambahkan konstruktor tersebut hanya berpengaruh ketika menciptakan objek Employee pada class MainEmployee, kita dapat menciptakan objek dengan memasukkan nilai dari atribut “name” saja dan tidak perlu memasukkan atribut “salary”, “year”, “month”, dan “day”.

4. Pada Class Manager baris ke 5, setelah variable day tambahkan variable bonus! Amati apa yang terjadi dan mengapa demikian? 

Jawaban:
Setelah menambahkan variable bonus program akan error, hal ini dikarenakan pada superclass tidak terdapat variabel bonus sehingga tidak dapat diturunkan pada konstruktor subclassnya.

5. Untuk apa digunakan keyword this pada class manager dan employee? Hapus keyword this dan amati apa yang terjadi? 



Jawaban:
Fungsi keyword this digunakan untuk merujuk pada instance variabel atau atribut dalam suatu class, juga digunakan sebagai pembeda antara variabel milik class dan variabel milik method. Setelah keyword this dihapus, maka pada output dari program adalah null untuk output dari tipe data String dan 0 untuk output tipe data double, hal ini terjadi karena keyword this dihapus, sehingga ketika method dipanggil dan berisi atribut tidak dapat merujuk pada atribut yang dimaksud.

6. Tambahkan constructor pada class Employee dengan parameter Bertipe data string bernama name yang nantinya bila constructor ini akan dipanggil akan menginisialisasi variable name! Amati perubahannya pada class anak dan jelaskan! Benahi bila terjadi kesalahan! 


Jawaban:
Ketika memanggil konstruktor dengan parameter name saja, maka pada output program tidak menampilkan base salary karena tidak mewarisi base salary hanya menampilkan bonus yang diperoleh tiap objek saja.


7. Pada bab sebelumnya anda telah belajar mengenai konsep encapsulation, jelaskan mengapa pada super class menggunakan modifier protected? Apa yang terjadi jika modifier anda ubah menjadi private atau public? Jelaskan ! Modul Praktikum – Pemrograman Lanjut 
Jawaban:
Pada materi sebelumnya, super class menggunakan modifier protected agar variabel atau method pada super class dapat diwariskan pada subclass nya. Jika pada superclass modifier diubah menjadi private, maka method pada superclass tidak dapat diakses atau diturunkan kepada subclassnya, dan jika modifier pada superclass diubah menjadi public, maka method atau variabelnya tidak hanya dapat diwariskan ke subclassnya  saja, tetapi juga dapat diakses oleh semua class.

8. Ubahlah acces modifier method pada kelas employee menjadi : 
a. Private 

Jawaban:
Setelah merubah modifier pada class employee sebagai super class dengan modifier private, maka akan terjadi error pada main class dan manager class. Hal ini dikarenakan modifier private tidak dapat diakses oleh class manapun, sehingga super class tidak dapat mewarisi method kepada sub classnya.
b. Protected Amati perubahan apa yang terjadi? Jelaskan jawaban anda dengan detail! 

Jawaban:
Setelah merubah modifier pada class employee sebagai super class dengan modifier protected, maka program dapat berjalan tanpa error baik pada main class maupun manager class. Hal ini dikarenakan modifier protected dapat diakses oleh sub classnya, sehingga super class dapat mewarisi method kepada sub classnya.



